Types:
Players = alice, bob, carol
Speaker = alice, bob, carol, noOne
Topic = news, weather, alice, bob, carol
Bool = true, false
Unit = unit
Sentiment = positive, neutral, negative
Properties:
topic :: Unit -> Topic ()
speaking :: Unit -> Speaker ()
related :: Topic -> Topic -> Bool ()
opinion:: Speaker -> Topic -> Sentiment ()
sharedOpinion :: Speaker -> Topic -> Bool ()

Actions:

formOpinion(person: Speaker, topic: Topic, sentiment(person): Sentiment) {
  opinion(person, topic) = sentiment
}

changeTopic(person: Speaker, newtopic: Topic)
{
  precondition speaking(unit) == person;
  precondition topic(unit) != newtopic;
  precondition B (person): related(topic(unit),newtopic) == true;
  public (Speaker) topic(unit) = newtopic
}

finishSpeaking(person: Speaker) {
  precondition speaking(unit) == person;
  public (Speaker) speaking(unit) = noOne
}

startSpeaking(person: Speaker) {
  precondition speaking(unit) == noOne;
  public (Speaker) speaking(unit) = person
}

shareOpinion(speaker: Speakers, topic: Topic) 
{
  precondition speaking(unit) == speaker;
  precondition topic(unit) == topic;
  precondition 
    Exists s in Sentiment: 
      opinion(speaker, topic) == s;
  tell (Speaker): 
    Which s in Sentiment: 
      opinion(speaker, topic) == s ;
  public (Speaker) sharedOpinion(speaker, topic) = true
}

interrupt(speaker: Speaker) {
  precondition speaking(unit) != speaker;
  public (Speaker) speaking(unit) = speaker
}

defer(target: Speaker) {
  public (Speaker) speaking(unit) = target
}

explainRelated(speaker: Speaker, t1: Topic, t2: Topic) {
  precondition B (speaker): related(t1, t2) == true;
  tell (Speaker): related(t1, t2) == true
}

declareRelated(t1(): Topics, t2(): Topics) {
  related(t1, t2) = true;
  related(t2, t1) = true
}

watchNews(person: Speaker) {
  tell (person): Which tf in Bool: related(news, weather) == tf;
  tell (person): Which tf in Bool: related(weather, news) == tf
}

Initial:
topic(unit) = news()
speaking(unit) = alice()

looks like (alice, bob, carol): Initial

Execute:
declareRelated(news, weather)
print: model
watchNews(alice)
print: model
Done.
