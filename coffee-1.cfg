Types:
Players = customer, barista
Goods = coffee, tea, euro, sugar
Bool = true, false
Unit = unit
Properties:
expects :: Players -> Goods ()
has :: Players -> Goods -> Bool ()

Actions:
formDesire(asker: Players, thing(asker): Goods) {
  expects(asker) = thing
}

askFor(asker: Players, askee: Players, thing: Goods) {
  precondition(B (asker): has(askee, thing) == true);
  tell (askee): Which t in Goods: expects(asker) == t 
}

fulfillOrder(server: Players, customer: Players, good: Goods) {
  precondition B (server): expects(customer) == good;
  precondition has(server, good) == true;
  public (Players) has(server, good) = false;
  public (Players) has(customer, good) = true;
  public (Players) expects(customer) = unit
}



Initial:
has(barista, coffee) = true()
has(barista, tea) = true()

looks like (customer, barista):
  Initial


Execute:
print: model
formDesire(customer, coffee)
print: model
goal: (has(customer, coffee) == true) and (has(barista,euro) == true)
Done.
